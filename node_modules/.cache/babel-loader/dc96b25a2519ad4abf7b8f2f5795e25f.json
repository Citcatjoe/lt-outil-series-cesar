{"ast":null,"code":"import _classCallCheck from \"/Users/gea/Documents/www/lt-outil-series-cesar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gea/Documents/www/lt-outil-series-cesar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gea/Documents/www/lt-outil-series-cesar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gea/Documents/www/lt-outil-series-cesar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gea/Documents/www/lt-outil-series-cesar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gea/Documents/www/lt-outil-series-cesar/src/components/FilterSelect.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\n\nvar FilterSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterSelect, _Component);\n\n  function FilterSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedOption: null,\n      selectJsonLabel: _this.props.select.selectJsonLabel\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"(fonction) selectJsonLabel \" + _this.state.selectJsonLabel);\n\n      _this.props.selectHandle(selectedOption, _this.state.selectJsonLabel);\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterSelect, [{\n    key: \"render\",\n    value: function render() {\n      var selectedOption = this.state.selectedOption;\n      var selectName = this.props.select.selectName;\n      var selectJsonLabel = this.props.select.selectJsonLabel;\n      var selectOptions = this.props.select.selectOptions;\n      console.log(\"(render) selectJsonLabel \" + selectJsonLabel); //console.log(select + 'lol');\n\n      return React.createElement(\"div\", {\n        className: \"filter-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"select\",\n        classNamePrefix: \"select\",\n        options: selectOptions,\n        value: selectedOption,\n        onChange: this.handleChange,\n        isClearable: true,\n        placeholder: selectName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (state.selectedOption && props.filteredOptions[state.selectJsonLabel] !== state.selectedOption.value) {\n        return {\n          selectedOption: null\n        };\n      }\n    }\n  }]);\n\n  return FilterSelect;\n}(Component);\n\nexport default FilterSelect; // import React, { Component } from \"react\";\n// import Select from \"react-select\";\n// class FilterSelect extends Component {\n//   state = {\n//     selectedOption: null,\n//   };\n//   handleChange = (selectedOption) => {\n//     this.setState({ selectedOption: selectedOption});\n//     this.props.selectFormatHandle(selectedOption);\n//   };\n//   render() {\n//     const { selectedOption } = this.state;\n//     const options = this.props.selectFormat;\n//     return (\n//       <Select options={options} value={selectedOption} onChange={this.handleChange} isClearable={true} />\n//     );\n//   }\n// }\n// export default FilterSelect;","map":{"version":3,"sources":["/Users/gea/Documents/www/lt-outil-series-cesar/src/components/FilterSelect.js"],"names":["React","Component","Select","FilterSelect","state","selectedOption","selectJsonLabel","props","select","handleChange","setState","console","log","selectHandle","selectName","selectOptions","filteredOptions","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,eAAe,EAAE,MAAKC,KAAL,CAAWC,MAAX,CAAkBF;AAF7B,K;;UAWRG,Y,GAAe,UAAAJ,cAAc,EAAI;AAC/B,YAAKK,QAAL,CAAc;AACZL,QAAAA,cAAc,EAAEA;AADJ,OAAd;;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgC,MAAKR,KAAL,CAAWE,eAAvD;;AACA,YAAKC,KAAL,CAAWM,YAAX,CAAwBR,cAAxB,EAAwC,MAAKD,KAAL,CAAWE,eAAnD;AACD,K;;;;;;;6BAEQ;AAAA,UACCD,cADD,GACoB,KAAKD,KADzB,CACCC,cADD;AAEP,UAAMS,UAAU,GAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBM,UAArC;AACA,UAAMR,eAAe,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,eAA1C;AACA,UAAMS,aAAa,GAAG,KAAKR,KAAL,CAAWC,MAAX,CAAkBO,aAAxC;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BN,eAA1C,EANO,CAOP;;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,eAAe,EAAC,QAFlB;AAGE,QAAA,OAAO,EAAES,aAHX;AAIE,QAAA,KAAK,EAAEV,cAJT;AAKE,QAAA,QAAQ,EAAE,KAAKI,YALjB;AAME,QAAA,WAAW,EAAE,IANf;AAOE,QAAA,WAAW,EAAEK,UAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAcD;;;6CArC+BP,K,EAAOH,K,EAAO;AAC5C,UAAIA,KAAK,CAACC,cAAN,IAAwBE,KAAK,CAACS,eAAN,CAAsBZ,KAAK,CAACE,eAA5B,MAAiDF,KAAK,CAACC,cAAN,CAAqBY,KAAlG,EAAyG;AACvG,eAAO;AAAEZ,UAAAA,cAAc,EAAE;AAAlB,SAAP;AACD;AACF;;;;EAVwBJ,S;;AAgD3B,eAAeE,YAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import React, { Component } from \"react\";\nimport Select from \"react-select\";\n\nclass FilterSelect extends Component {\n  state = {\n    selectedOption: null,\n    selectJsonLabel: this.props.select.selectJsonLabel\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.selectedOption && props.filteredOptions[state.selectJsonLabel] !== state.selectedOption.value) {\n      return { selectedOption: null };\n    }\n  }\n\n  handleChange = selectedOption => {\n    this.setState({\n      selectedOption: selectedOption\n    });\n    console.log(\"(fonction) selectJsonLabel \" + this.state.selectJsonLabel);\n    this.props.selectHandle(selectedOption, this.state.selectJsonLabel);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const selectName = this.props.select.selectName;\n    const selectJsonLabel = this.props.select.selectJsonLabel;\n    const selectOptions = this.props.select.selectOptions;\n\n    console.log(\"(render) selectJsonLabel \" + selectJsonLabel);\n    //console.log(select + 'lol');\n\n    return (\n      <div className=\"filter-select\">\n        {/* <p>{selectName}</p> */}\n        <Select\n          className=\"select\"\n          classNamePrefix=\"select\"\n          options={selectOptions}\n          value={selectedOption}\n          onChange={this.handleChange}\n          isClearable={true}\n          placeholder={selectName}\n        />\n      </div>\n    );\n  }\n}\n\n\n\nexport default FilterSelect;\n\n\n// import React, { Component } from \"react\";\n// import Select from \"react-select\";\n\n// class FilterSelect extends Component {\n//   state = {\n//     selectedOption: null,\n//   };\n\n//   handleChange = (selectedOption) => {\n//     this.setState({ selectedOption: selectedOption});\n//     this.props.selectFormatHandle(selectedOption);\n//   };\n\n//   render() {\n//     const { selectedOption } = this.state;\n//     const options = this.props.selectFormat;\n\n//     return (\n//       <Select options={options} value={selectedOption} onChange={this.handleChange} isClearable={true} />\n//     );\n//   }\n// }\n\n\n\n// export default FilterSelect;\n"]},"metadata":{},"sourceType":"module"}